
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Заголовок = Параметры.ЗаголовокФормыВыбора;
	СтруктураЗаполняемыхЗначений = Новый Структура("ИмяТаблицыДляЗаполнения, ИмяКолонкиДляЗаполнения, ИмяРеквизитаФормыДляЗаполнения", 
													Параметры.ИмяТаблицыДляЗаполнения, 
													Параметры.ИмяКолонкиДляЗаполнения,
													Параметры.ИмяРеквизитаФормыДляЗаполнения);
	
	Если ЗначениеЗаполнено(Параметры.МассивВыбранныхЗначений) Тогда
		МассивПереданныхЗначений = Параметры.МассивВыбранныхЗначений;
	Иначе
		МассивПереданныхЗначений = Новый Массив();
	КонецЕсли;
	
	ЗаполнитьСписокДоступныхЗначений(МассивПереданныхЗначений, 
									 Параметры.ИмяТаблицыВыбора,
									 Параметры.КоллекцияФильтров);
	

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	ПараметрыЗакрытияФормы = Новый Структура();
	Если ЗначениеЗаполнено(СтруктураЗаполняемыхЗначений.ИмяТаблицыДляЗаполнения) Тогда
		//ПараметрыЗакрытияФормы.Вставить("АдресТаблицыВоВременномХранилище", СформироватьТаблицуВыбранныхЗначений());
		ПараметрыЗакрытияФормы.Вставить("ИмяТаблицыДляЗаполнения",          СтруктураЗаполняемыхЗначений.ИмяТаблицыДляЗаполнения);
		ПараметрыЗакрытияФормы.Вставить("ИмяКолонкиДляЗаполнения",          СтруктураЗаполняемыхЗначений.ИмяКолонкиДляЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗаполняемыхЗначений.ИмяРеквизитаФормыДляЗаполнения) Тогда
		ПараметрыЗакрытияФормы.Вставить("МассивВыбранныхЗначений", СформироватьМассивВыбранныхЗначений());
		ПараметрыЗакрытияФормы.Вставить("ИмяРеквизитаФормыДляЗаполнения", СтруктураЗаполняемыхЗначений.ИмяРеквизитаФормыДляЗаполнения);
	КонецЕсли;
	
	ОповеститьОВыборе(ПараметрыЗакрытияФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметки(Команда)
	
	Строки = ДеревоВыбираемыхЗначений.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		
		Строка.Пометка = Ложь;
		ДеревоЗначенийУстановитьПометку(Строка, Ложь);
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	// Установим пометку только строк верхнего уровня
	Строки = ДеревоВыбираемыхЗначений.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		
		Строка.Пометка = Истина;
		ДеревоЗначенийУстановитьПометку(Строка, Ложь);
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоВыбираемыхЗначенийПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоВыбираемыхЗначений.ТекущиеДанные;	
	
	ТекущиеДанные.Пометка = ?(ТекущиеДанные.Пометка = 2, 0, ТекущиеДанные.Пометка);
	Если ТекущиеДанные.ЭтоГруппа И ТекущиеДанные.Пометка = 1 Тогда
		// Снимем пометки с нижнего уровня
		ДеревоЗначенийУстановитьПометку(ТекущиеДанные, Ложь);
	ИначеЕсли Не(ТекущиеДанные.ЭтоГруппа) Тогда
		
		// Снимем пометки с верхнего уровня
		Родитель = ТекущиеДанные.ПолучитьРодителя();
		ЭлементыРодителя = Родитель.ПолучитьЭлементы();
		Пометка = ЗначениеПометкиЭлементов(ЭлементыРодителя);
		Пометка = ?(Пометка = 0, 0, 2);
		Пока Родитель <> Неопределено Цикл
			Родитель.Пометка = Пометка;
			Родитель = Родитель.ПолучитьРодителя();
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ЗаполнитьСписокДоступныхЗначений(МассивПереданыхЗначений, ВидСправочника, ДополнительныеУсловия = Неопределено)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Справочник.Родитель КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Родители
	|ИЗ
	|	%ВидСправочника% КАК Справочник
	|ГДЕ
	|	Справочник.ПометкаУдаления = ЛОЖЬ
	|	И Справочник.Ссылка В (&МассивПереданыхЗначений)
	|	И Справочник.Родитель > ЗНАЧЕНИЕ(%ВидСправочника%.ПустаяСсылка)
	|;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Справочник.Ссылка			КАК Значение,
	|	Справочник.Представление 	КАК Представление,
	|	Справочник.Родитель			КАК Родитель,
	|	Справочник.ЭтоГруппа		КАК ЭтоГруппа,
	
	|	ВЫБОР КОГДА Справочник.ЭтоГруппа ТОГДА 0
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НомерКартинки,
	
	|ВЫБОР 
	|	КОГДА Справочник.Ссылка В (&МассивПереданыхЗначений) 
	|		ТОГДА 1
	|	КОГДА Справочник.ЭтоГруппа И Родители.Ссылка ЕСТЬ НЕ NULL
	|		ТОГДА 2
	|	ИНАЧЕ 0
	|КОНЕЦ КАК Пометка
	
	|ИЗ
	|	%ВидСправочника% КАК Справочник
	|ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Родители КАК Родители
	|	ПО Родители.Ссылка = Справочник.Ссылка
	|ГДЕ
	|	Справочник.ПометкаУдаления = ЛОЖЬ
	|УПОРЯДОЧИТЬ ПО
	|	Справочник.ЭтоГруппа ИЕРАРХИЯ,
	|	Справочник.Представление
	|");
	
	Если ЗначениеЗаполнено(ДополнительныеУсловия) Тогда
		
		Для Каждого Фильтр Из ДополнительныеУсловия Цикл
			
			Запрос.Текст = ДобавитьТекстУсловия(Запрос.Текст, " СправочникДляВыбораОтоборов.", "И", Фильтр);
			Запрос.УстановитьПараметр(Фильтр.ИмяПараметра, Фильтр.ЗначениеПараметра);
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ВидСправочника%", ВидСправочника);
	Запрос.УстановитьПараметр("МассивПереданыхЗначений", МассивПереданыхЗначений);
	
	ДеревоЗначений = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(ДеревоЗначений, "ДеревоВыбираемыхЗначений");
	
КонецПроцедуры

&НаСервере
Функция СформироватьМассивВыбранныхЗначений()
	
	МассивВыбранныхЗначений = Новый Массив;
	
	Значение = РеквизитФормыВЗначение("ДеревоВыбираемыхЗначений");
	МассивСтрок = Значение.Строки.НайтиСтроки(Новый Структура("Пометка", 1), Истина);
	
	Для Каждого Строка Из МассивСтрок Цикл
		МассивВыбранныхЗначений.Добавить(
			Строка.Значение);
	КонецЦикла;

	Возврат МассивВыбранныхЗначений;
		
КонецФункции

&НаКлиенте
Процедура ДеревоЗначенийУстановитьПометку(Данные, Пометка, ПроверитьРодителя = Ложь)

	Строки = Данные.ПолучитьЭлементы();
	
	Для Каждого Строка Из Строки Цикл
		Строка.Пометка = Пометка;
		ДеревоЗначенийУстановитьПометку(Строка, Пометка);
	КонецЦикла;
	
	Родитель = Данные.ПолучитьРодителя();
	Если ПроверитьРодителя И Не(Родитель = Неопределено) Тогда
		ДеревоЗначенийПроверитьРодителя(Родитель);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоЗначенийПроверитьРодителя(Родитель)
	
	Если Родитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЭлементыРодителя = Родитель.ПолучитьЭлементы();
	Родитель.Пометка = ЗначениеПометкиЭлементов(ЭлементыРодителя);
	
КонецПроцедуры

&НаКлиенте
Функция ЗначениеПометкиЭлементов(ЭлементыРодителя)
	
	ЕстьПомеченные   = Ложь;
	ЕстьНепомеченные = Ложь;
	
	Для Каждого ЭлементРодителя Из ЭлементыРодителя Цикл
		
		Если ЭлементРодителя.Пометка = 0 Тогда
			ЕстьНепомеченные = Истина;
		ИначеЕсли ЭлементРодителя.Пометка = 1 Тогда 	
			ЕстьПомеченные = Истина;
		ИначеЕсли ЭлементРодителя.Пометка = 2 Тогда
			ЕстьПомеченные = Истина;
			ЕстьНепомеченные = Истина;
		КонецЕсли;
		
		Если ЕстьНепомеченные И ЕстьПомеченные Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьПомеченные Тогда
		Если ЕстьНепомеченные Тогда
			Возврат 2;
		Иначе
			Возврат 1;
		КонецЕсли;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции
&НаСервере
Функция ДобавитьТекстУсловия(ТекстЗапроса, ИмяТаблицы, СоединительУсловий, Фильтр)
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + " " + СоединительУсловий 
		+ ИмяТаблицы
		+ Фильтр.РеквизитОтбора
		+ " " + Фильтр.Условие
		+ ?(Фильтр.Условие = "В", " (","")
		+ " &"
		+ Фильтр.ИмяПараметра
		+ ?(Фильтр.Условие = "В", ") ","");

	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#КонецОбласти
